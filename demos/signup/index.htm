<!doctype>

<html lang="en">
	<head>
		<title>Signup - Yavp demo</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<link href="../css/bootstrap.min.css" rel="stylesheet">
		<link href="../css/style.css" rel="stylesheet">
	</head>
	<body>
		<div class="container">
			<div class="row">
				<div class="col-md-6 col-md-offset-3">
					<div class="well">
						<form id="signup-form" method="post" action="index.htm">
							<div class="form-group">
								<label for="name" class="required">Name:</label>
								<input type="text" class="form-control" id="name" name="name">
							</div>
							<div class="form-group">
								<label for="email" class="required">Email: <span class="text-muted">(enter john@doe.net to trigger an error)</span></label>
								<input type="text" class="form-control" id="email" name="email">
							</div>
							<div class="form-group">
								<label for="email_secondary">Secondary email:</label>
								<input type="text" class="form-control" id="email_secondary" name="email_secondary">
							</div>
							<div class="form-group">
								<label for="password" class="required">Password:</label>
								<input type="password" class="form-control" id="password" name="password">
							</div>
							<div class="form-group">
								<label for="password_confirm" class="required">Password Confirm:</label>
								<input type="password" class="form-control" id="password_confirm" name="password_confirm">
							</div>
							<div class="form-group">
								<label for="avatar">Avatar:</label>
								<input type="file" id="avatar" name="avatar">
							</div>
							
							<div class="form-group">
								<div class="checkbox">
									<label for="tos">
										<input type="checkbox" name="tos" id="tos"> I agree to the terms of service.
									</label>
								</div>
							</div>
							<button type="submit" class="btn btn-info btn-block">Signup!</button>
						</form>
					</div>
				</div>
			</div>
		
		</div>
		
		
		<script src="https://code.jquery.com/jquery.js"></script>
		<script src="../js/bootstrap.min.js"></script>
		<script src="../../yavp.js"></script>
		<script>
			$(document).ready(function () {
				$('#signup-form').yavp({
					elementError : function (message) {
						var $element    = this,
							$form_group = $element.parents('.form-group:first'),
							$help_block = $form_group.find('.help-block.yavp-error');
					
						if (!$form_group.hasClass('has-error')) {
							$form_group.addClass('has-error');
						}
						
						if ($help_block.length === 0) {
							$help_block = $('<span class="help-block yavp-error">').hide();
							$help_block.appendTo($form_group);
						}
						
						$help_block.text(message);
					
						if (!$help_block.is(':visible')) {
							$help_block.fadeIn('fast');
						}	
					},
					elementSuccess : function () {
						var $element    = this,
							$form_group = $element.parents('.form-group:first'),
							$help_block = $form_group.find('.help-block.yavp-error');
						
						if ($form_group.hasClass('has-error')) {
							$form_group.removeClass('has-error');
						}
						
						if ($help_block.length === 1) {
							$help_block.fadeOut('fast');
						}					
						
					},
					elementBefore  : function () {
						this.addClass('processing');	
					},
					elementAfter  : function () {
						this.removeClass('processing');	
					},
					fields : [
						{
							selector  : '#name',
							validators: [
								'required',
								/^[a-z ']+$/i
							]
							
						},
						{
							selector  : '#email',
							validators: [
								'required',
								'email',
								//function is named just to indicate what it does
								function email_exists(result) {
									var $element = this;

									//simulate an AJAX call using setTimeout with random interval
									setTimeout(function () {
	
										if ($element.val() == 'john@doe.net') {
											result.error('Email already in use!');
										} else {
											result.success();
										}
									}, Math.floor(Math.random() * 2000) + 1000);
									
								}
							]
						},
						{
							selector  : '#email_secondary',
							validators: [
								'optional',
								'email'
							]
						},
						{
							//any valid selector will do, this is equal to #date_of_birth in this demo
							selector  : 'input[name="password"]',
							/*
								once this field is validated, Yavp will proceed with validating "chained" elements
								In this case we want to revalidate password_confirm
							*/
							chain     : '#password_confirm',
							validators: [
								'required',
								//name is entirely optional
								function strong_password(result) {
									var $element = this;
									
									//we're mixing two ways of passing validation result
									if ($element.val().length >= 4) {
										//normal synchronous way that lets us immediately pass false/true 
										return true;
									} else {
										//asynchronous way that lets us pass some additional params, such as error message 
										result.error('Password should be at least 4 characters long');
									}
								},
								
							]
						},
						{
							selector : '#password_confirm',
							//override the default error message for "equals" validator just for this element
							messages : {
								'equals' : "These passwords don't look similar!"
							},
							validators: [
								/*
									Since we want to pass additional params to the the validator, we can't just pass its name.
									Instead we pass a hash with "validator" key set to validator's name, and "selector" which will
									let Yavp find the field to compare
								*/
								{
									validator : 'equals',
									selector  : 'input[name="password"]'
								}
							]
						},
						{
							selector   : '#avatar',
							validators : [
								'required',
								{
									validator  : 'file',
									extensions : ['txt', 'jpg']
								}
							],
							messages   : {
								'required' : 'Please pick a file'	
							}
						},
						{
							selector  : '#tos',
							//let's override the default message
							messages  : {
								'checked' : 'You have to accept our rules!'	
							},
							validators: [
								'checked'
							]
						}
					]
				});				
			});
		</script>
	</body>
</html>